name: ci

on:
  push:
    branches:
      - calamares
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

env:
  BUILDDIR: /build
  SRCDIR: ${{ github.workspace }}
  DESTDIR: /INSTALL_ROOT
  CMAKE_ARGS: |
    -DCMAKE_BUILD_TYPE=Release
    -DWEBVIEW_FORCE_WEBKIT=1
    -DKDE_INSTALL_USE_QT_SYS_PATHS=ON
    -DWITH_PYTHONQT=OFF"
    -DCMAKE_BUILD_TYPE=Debug

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker://kdeneon/plasma:user
      options: --tmpfs /build:rw,size=512M --user 0:0
    steps:
      - 
        name: prepare
        run: |
          sudo apt-get update
          sudo apt-get -y install git-core
      - 
        name: checkout
        uses: actions/checkout@v2
      - 
        name: install dependencies
        run: |
          sudo apt-get -y install \
            build-essential \
            cmake \
            extra-cmake-modules \
            gettext \
            kio-dev \
            libatasmart-dev \
            libboost-python-dev \
            libkf5config-dev \
            libkf5coreaddons-dev \
            libkf5i18n-dev \
            libkf5iconthemes-dev \
            libkf5parts-dev \
            libkf5service-dev \
            libkf5solid-dev \
            libkpmcore-dev \
            libparted-dev \
            libpolkit-qt5-1-dev \
            libqt5svg5-dev \
            libqt5webkit5-dev \
            libyaml-cpp-dev \
            os-prober \
            pkg-config \
            python3-dev \
            qtbase5-dev \
            qtdeclarative5-dev \
            qttools5-dev \
            qttools5-dev-tools
      -
        name: check environment
        run: |
          test -f $SRCDIR/CMakeLists.txt || { echo "! Missing $SRCDIR/CMakeLists.txt" ; exit 1 ; }
          test -n "$BUILDDIR" || { echo "! \$BUILDDIR not set" ; exit 1 ; }
          test -n "$SRCDIR" || { echo "! \$SRCDIR not set" ; exit 1 ; }
          mkdir -p $BUILDDIR $SRCDIR $DESTDIR
      -
        name: cmake
        run: cmake $CMAKE_ARGS $SRCDIR
      -
        name: make
        run: make -j2 VERBOSE=1
      - 
        name: build results
        run: ls -la $( find "$BUILDDIR" -type f -name '*.so' )
      - 
        name: install
        id: install
        run:  make install VERBOSE=1
      -
        name: debug install
        if: ${{ failure() && steps.install.outcome == 'failure' }}
        run: ls -la $( find "$DESTDIR" -type f -name '*.so' )