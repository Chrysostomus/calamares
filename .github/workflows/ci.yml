name: ci

on:
  push:
  workflow_dispatch:
  #schedule:
  #  - cron:  '30 * * * *'

env:
  BUILDDIR: /build
  SRCDIR: /src

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker://kdeneon/plasma:user
      options: --tmpfs /build:rw,size=500M --user 0:0
    steps:
      - 
        name: prepare
        run: |
          sudo apt-get update
          sudo apt-get -y install git-core
      - 
        name: checkout
        uses: actions/checkout@v2
      - 
        name: install dependencies
        run: |
          sudo apt-get -y install \
            build-essential \
            cmake \
            extra-cmake-modules \
            gettext \
            kio-dev \
            libatasmart-dev \
            libboost-python-dev \
            libkf5config-dev \
            libkf5coreaddons-dev \
            libkf5i18n-dev \
            libkf5iconthemes-dev \
            libkf5parts-dev \
            libkf5service-dev \
            libkf5solid-dev \
            libkpmcore-dev \
            libparted-dev \
            libpolkit-qt5-1-dev \
            libqt5svg5-dev \
            libqt5webkit5-dev \
            libyaml-cpp-dev \
            os-prober \
            pkg-config \
            python3-dev \
            qtbase5-dev \
            qtdeclarative5-dev \
            qttools5-dev \
            qttools5-dev-tools
      -
        name: config
        run: |
          test -f "ci/ci-config.sh" && . "ci/ci-config.sh"
      - 
        name: continuous
        env: 
          SRCDIR: ${{ github.workspace }}
        run: |
          test -x "ci/ci-continuous.sh" || { echo "! Missing ci-continuous.sh" ; exit 1 ; }
          exec "ci/ci-continuous.sh"

      # - name: irc push
      #   uses: rectalogic/notify-irc@v1
      #   if: github.event_name == 'push'
      #   with:
      #     channel: "#mychannel"
      #     nickname: my-github-notifier
      #     message: |
      #       ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}
      #       ${{ join(github.event.commits.*.message) }}